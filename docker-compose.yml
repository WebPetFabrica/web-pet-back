version: '3.8'

services:
  app:
    build: .
    ports:
      - "${APP_PORT:-8081}:8081"
    depends_on:
      - db
    environment:
      # Database configuration from environment
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-webpet_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      
      # Security configuration
      JWT_SECRET: ${JWT_SECRET}
      
      # Application configuration
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000}
      
      # Logging configuration
      LOG_LEVEL_APP: ${LOG_LEVEL_APP:-INFO}
      LOG_LEVEL_SECURITY: ${LOG_LEVEL_SECURITY:-INFO}
      
    networks:
      - webpet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    ports:
      - "${DB_PORT:-5433}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-webpet_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d/
    networks:
      - webpet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-webpet_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  webpet-network:
    driver: bridge
# Application Configuration
spring.application.name=WebPet
server.port=${PORT:8081}
server.servlet.context-path=/
server.shutdown=graceful

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/webpet_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Security Configuration - JWT
api.security.token.secret=${JWT_SECRET:minha-chave-secreta-super-segura-de-256-bits-para-jwt-que-deve-ser-alterada-em-producao}
api.security.token.expiration=${JWT_EXPIRATION:3600000}

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
app.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true
app.cors.max-age=3600

# Logging Configuration
app.logging.format=${LOGGING_FORMAT:console}

# Structured Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] [%X{clientIp:-}] [%X{userId:-}] %logger{36} - %msg%n

# Log Levels by Component
logging.level.br.edu.utfpr.alunos.webpet=${LOG_LEVEL_APP:INFO}
logging.level.SECURITY=${LOG_LEVEL_SECURITY:INFO}
logging.level.AUDIT=${LOG_LEVEL_AUDIT:INFO}
logging.level.org.springframework.security=${LOG_LEVEL_SPRING_SECURITY:DEBUG}
logging.level.org.hibernate=${LOG_LEVEL_HIBERNATE:WARN}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:WARN}
logging.level.com.zaxxer.hikari=${LOG_LEVEL_HIKARI:WARN}
logging.level.root=${LOG_LEVEL_ROOT:INFO}

# Security Logging Configuration
security.logging.enabled=${SECURITY_LOGGING_ENABLED:true}
security.logging.include-request-details=${SECURITY_LOG_REQUEST_DETAILS:true}
security.logging.include-user-details=${SECURITY_LOG_USER_DETAILS:true}

# Audit Logging Configuration
audit.logging.enabled=${AUDIT_LOGGING_ENABLED:true}
audit.logging.include-ip=${AUDIT_LOG_INCLUDE_IP:true}
audit.logging.include-user-agent=${AUDIT_LOG_INCLUDE_USER_AGENT:false}

# Performance Logging Configuration
performance.logging.enabled=${PERFORMANCE_LOGGING_ENABLED:false}
performance.logging.threshold-ms=${PERFORMANCE_LOG_THRESHOLD:1000}

# File Logging Configuration (Production)
logging.file.name=${LOG_FILE_NAME:logs/webpet.log}
logging.file.max-size=${LOG_FILE_MAX_SIZE:50MB}
logging.file.max-history=${LOG_FILE_MAX_HISTORY:30}
logging.file.total-size-cap=${LOG_FILE_TOTAL_SIZE:1GB}

# JSON Logging Configuration
logging.json.enabled=${JSON_LOGGING_ENABLED:false}
logging.json.include-mdc=${JSON_INCLUDE_MDC:true}
logging.json.include-context=${JSON_INCLUDE_CONTEXT:true}

# Rate Limiting Configuration
rate-limit.general.requests-per-minute=${RATE_LIMIT_GENERAL:100}
rate-limit.auth.requests-per-minute=${RATE_LIMIT_AUTH:10}
rate-limit.cache-size=${RATE_LIMIT_CACHE_SIZE:10000}
rate-limit.cleanup-interval=${RATE_LIMIT_CLEANUP_INTERVAL:300000}

# Rate Limiting Logging Configuration
rate-limit.logging.enabled=${RATE_LIMIT_LOGGING_ENABLED:true}
rate-limit.logging.log-blocked-requests=${RATE_LIMIT_LOG_BLOCKED:true}

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=userProfiles,rateLimits,authTokens,users,activeUsers,userStats,userProjections,ongProjections,protetorProjections,searchResults,paginatedResults,pets,donations
spring.cache.redis.time-to-live=600000

# JPA Cache Configuration (disabled for compatibility)
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.default-models-expand-depth=1
springdoc.swagger-ui.default-model-expand-depth=1
springdoc.packages-to-scan=br.edu.utfpr.alunos.webpet.controllers
springdoc.paths-to-match=/auth/**,/user/**
springdoc.show-actuator=false

# OpenAPI Info Configuration
springdoc.info.title=WebPet API
springdoc.info.description=API for pet adoption management system
springdoc.info.version=1.0.0
springdoc.info.contact.name=WebPet Team
springdoc.info.contact.email=webpet@utfpr.edu.br
springdoc.info.license.name=MIT License

# Health Check Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.diskspace.enabled=true
management.health.db.enabled=true
management.info.env.enabled=true

# Actuator Security Configuration
management.endpoints.web.base-path=/actuator
management.security.enabled=false

# Application Info for Actuator
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Validation Configuration
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=America/Sao_Paulo

# Session Configuration
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.timeout=30m

# Error Handling Configuration
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on-param
server.error.include-exception=false

# Async Configuration
spring.task.execution.pool.core-size=8
spring.task.execution.pool.max-size=16
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=webpet-async-

# Transaction Configuration
spring.transaction.default-timeout=30
spring.transaction.rollback-on-commit-failure=true
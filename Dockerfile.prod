# Production Dockerfile for WebPet
# Multi-stage build for optimized production image

# Build stage
FROM maven:3.9-amazoncorretto-21 AS build
WORKDIR /app

# Copy dependency files first for better layer caching
COPY pom.xml .
COPY .mvn .mvn
COPY mvnw .

# Download dependencies
RUN ./mvnw dependency:go-offline -B

# Copy source code and build
COPY src ./src
RUN ./mvnw clean package -DskipTests -B

# Production stage
FROM amazoncorretto:21-alpine AS production

# Create non-root user for security
RUN addgroup -g 1001 webpet && \
    adduser -D -s /bin/sh -u 1001 -G webpet webpet

# Install curl for healthchecks
RUN apk add --no-cache curl

# Set working directory
WORKDIR /app

# Copy jar from build stage
COPY --from=build /app/target/*.jar app.jar

# Create logs directory
RUN mkdir -p logs && chown -R webpet:webpet /app

# Switch to non-root user
USER webpet

# Expose port
EXPOSE 8081

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8081/actuator/health || exit 1

# Production JVM settings
ENV JAVA_OPTS="-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+UseStringDeduplication -Dspring.profiles.active=prod"

# Run application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]